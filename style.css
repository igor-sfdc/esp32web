body {
	font-family: Arial, Helvetica, sans-serif;
    --range-line-width: 85em;
}

.invisible {
    display: none;
}

.all-colors {
    border: solid thin black;
    --bg-color: black;
}

.red {
    border: solid thin red;
    --bg-color: red;
}

.green {
    border: solid thin green;
    --bg-color: green;
}

.blue {
    border: solid thin blue;
    --bg-color: blue;
}

.range-line {
/*
    min-width: var(--range-line-width);
    width: var(--range-line-width);
*/
	text-align: left;
    padding-right: 1em;
    padding-top: 1em;
    margin-bottom: 0.5em;
/*
    overflow-x:scroll;
*/
    white-space:nowrap;
}

.range-group {
	display: inline-block; 
	text-align: center;
    margin-left: 1em;
    margin-top: 0em;
}

.range-output {
    width: 3em;
    text-align: right;
    margin-left: 0em;
    margin-top: 0em;
}

.range-input {
	width: 20em;
}




.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
  margin-bottom: 1em;
}

.switch input {display:none;}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--bg-color);
  opacity: 0.35;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: var(--bg-color);
  opacity: 1.0;
}

input:focus + .slider {
  box-shadow: 0 0 1px var(--bg-color);
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}



input[type=text] {
    width: 50em;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    margin-top: 6px;
    margin-bottom: 16px;
    resize: vertical;
    font-size: 1em;
    text-align: right;
}

input[type=text][name=serverAddress] {
    width: 15em;
}

input[type=submit] {
    background-color: #4CAF50;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-right: 1em;
}

input[type=button] {
    background-color: #FFBD33;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-right: 1em;
}

input[type=submit]:hover {
    background-color: #45a049;
}

.container {
    border-radius: 5px;
    background-color: #f2f2f2;
    padding: 20px;
}



.checkmark-container {
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.checkmark-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: -1;
    left: 0;
    height: 35px;
    width: 35px;
    background-color: #eee;
}

/* On mouse-over, add a grey background color */
.checkmark-container:hover input ~ .checkmark {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.checkmark-container input:checked ~ .checkmark {
    background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.checkmark-container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.checkmark-container .checkmark:after {
    left: 14px;
    top: 10px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}
